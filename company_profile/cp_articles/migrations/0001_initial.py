# Generated by Django 2.0.8 on 2018-09-12 10:08

import ckeditor.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion
import taggit_selectize.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('membership', '0006_auto_20180814_1105'),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(blank=True, max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('lead_in', models.CharField(blank=True, default='', max_length=1000)),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(db_index=True, default=datetime.datetime.now)),
                ('published_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('is_published', models.BooleanField(db_index=True, default=True)),
                ('is_featured', models.BooleanField(db_index=True, default=False)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='cp/user_uploads/featured_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_site', to='sites.Site')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='TempArticle',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cp_articles.Article')),
            ],
            bases=('cp_articles.article',),
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_author', to='membership.Member', verbose_name='author'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ManyToManyField(blank=True, null=True, related_name='article_category', to='cp_articles.Category'),
        ),
        migrations.AddField(
            model_name='article',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_owner', to='membership.Member', verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='article',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_site', to='sites.Site'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=taggit_selectize.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
